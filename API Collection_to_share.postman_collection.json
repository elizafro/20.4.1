{
	"info": {
		"_postman_id": "db026adb-537e-4e7f-8160-a47c62217891",
		"name": "API Collection_to_share",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d2e74837-1f0d-4e72-9f44-f8edc8d554c2",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b9b092a4-4a02-4112-9c03-268cc969d97b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{request_url}}",
					"host": [
						"{{request_url}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b57dc25f-1677-4cb9-8cd2-5655c0837c1d",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b84559b1-cc55-4b36-99b8-eaca209e8830",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{Request_Data}}"
				},
				"url": {
					"raw": "{{request_url}}",
					"host": [
						"{{request_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c037d97d-b7e0-4b6b-bee1-ccbd88601a67",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fe910e64-96af-4716-ac41-4734314c493e",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{Request_Data}}"
				},
				"url": {
					"raw": "{{request_url}}",
					"host": [
						"{{request_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "20565321-6b8e-4df7-a61b-981094eaf24b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "541b5a13-6ebb-4425-8615-28da24a259f0",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{request_url}}",
					"host": [
						"{{request_url}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1b994341-2117-4db5-b9f3-20186b03de7e",
				"type": "text/javascript",
				"exec": [
					"if (pm.variables.get(\"TC\") !== iteration){",
					"    pm.variables.set(\"request\", null)",
					"}",
					"",
					"pm.variables.set(\"TC\", iteration);",
					"",
					"if ((pm.variables.get(\"request\") === undefined) || (pm.variables.get(\"request\") === null)){",
					"    pm.variables.set(\"request\", parseInt(-1));",
					"}",
					"",
					"if (data.length > pm.variables.get(\"request\") + 1)",
					"{",
					"    postman.setNextRequest(data[pm.variables.get(\"request\") + 1].request_type);",
					"}",
					"else",
					"{",
					"    postman.setNextRequest(null);",
					"}",
					"",
					"if (pm.variables.get(\"request\") != -1)",
					"{",
					"    var request_data = data[pm.variables.get(\"request\")];",
					"    ",
					"    if (request_data.PC !== null && request_data.PC !== undefined){",
					"            if (request_data.PC.command == \"terminate\"){",
					"               postman.setNextRequest(null);",
					"            }",
					"    }",
					"    ",
					"    ",
					"    if (request_data.PI !== null && request_data.PI !== undefined)",
					"    {",
					"        for (let key in request_data.PI) {",
					"            pm.variables.set(key, request_data.PI[key]);",
					"        }",
					"    }",
					"    ",
					"    if (request_data.I !== null && request_data.I !== undefined)",
					"    {",
					"        pm.variables.set(\"Request_Data\", JSON.stringify(request_data.I));",
					"    }",
					"    ",
					"    pm.variables.set (\"request_url\", request_data.url);",
					"}",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2a2443a0-f31b-4c7c-8b8f-f8e476f5124a",
				"type": "text/javascript",
				"exec": [
					"if (pm.variables.get(\"request\") != -1)",
					"{",
					"    var request_data = data[pm.variables.get(\"request\")];",
					"    ",
					"    if (request_data.H !== null && request_data.H !== undefined)",
					"    {",
					"        pm.test(\"Check response code and compare with expectation\", function () {",
					"            pm.response.to.have.status(request_data.H[\"response code\"]);",
					"        });",
					"    }",
					"    ",
					"    if (request_data.PO !== null && request_data.PO !== undefined)",
					"    {",
					"        pm.test(\"Output data has been saved\", function () {",
					"        var response = JSON.parse(responseBody);",
					"        for (let key in request_data.PO) {",
					"            if (response[key] !== null) {",
					"                pm.variables.set(key, response[key]);",
					"            }",
					"        }",
					"        });",
					"    }",
					"    ",
					"    // Check results of the request",
					"    if (request_data.O !== null && request_data.O !== undefined)",
					"    {",
					"        pm.test(\"Compare result and expectation\", function () {",
					"        var response = JSON.parse(responseBody);",
					"        ",
					"        check_attribute = function (response, etalon, guard)",
					"        {",
					"            if (++guard >= 20) return;",
					"            for (let key in etalon) {",
					"                    if (response[key] == '[object Object]'){",
					"                        check_attribute (response[key], etalon[key], guard);",
					"                        continue;",
					"                    }",
					"                if (response[key] === undefined) {",
					"                    throw new Error(key + \" is not defined in response\");",
					"                }",
					"                pm.expect(toString(response[key])).to.equal(toString(etalon[key]));",
					"            }",
					"            return;",
					"        };",
					"    ",
					"        check_attribute (response, request_data.O, 0);",
					"        });",
					"    }",
					"}",
					"",
					"pm.variables.set(\"request\", pm.variables.get(\"request\") + 1);",
					"",
					"if (pm.variables.get(\"request\") == data.length){",
					"    pm.variables.set(\"request\", null);",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"id": "f229d16f-dfd0-432a-954f-497597fcd8c3",
			"key": "request_url",
			"value": "",
			"type": "string"
		},
		{
			"id": "fa0991eb-d0e9-417f-89e9-a19aec5d96c1",
			"key": "test_case",
			"value": "",
			"type": "string"
		},
		{
			"id": "83bd2f1f-4380-41fa-a1fc-08580b5e3372",
			"key": "test_type",
			"value": "",
			"type": "string"
		},
		{
			"id": "26ba6be1-1c88-43db-9a21-11fad8fce5d4",
			"key": "url",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}